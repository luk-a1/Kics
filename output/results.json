{
	"kics_version": "v2.1.12",
	"files_scanned": 1,
	"lines_scanned": 39,
	"files_parsed": 1,
	"lines_parsed": 35,
	"lines_ignored": 4,
	"files_failed_to_scan": 0,
	"queries_total": 1088,
	"queries_failed_to_execute": 0,
	"queries_failed_to_compute_similarity_id": 0,
	"scan_id": "console",
	"severity_counters": {
		"CRITICAL": 0,
		"HIGH": 2,
		"INFO": 6,
		"LOW": 1,
		"MEDIUM": 2,
		"TRACE": 0
	},
	"total_counter": 11,
	"total_bom_resources": 0,
	"start": "2025-08-06T03:38:02.479095989Z",
	"end": "2025-08-06T03:38:12.348493029Z",
	"paths": [
		"/path/03-one-webserver.zip"
	],
	"queries": [
		{
			"query_name": "Sensitive Port Is Exposed To Entire Network",
			"query_id": "381c3f2a-ef6f-4eff-99f7-b169cda3422c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group",
			"severity": "HIGH",
			"platform": "Terraform",
			"cwe": "200",
			"cloud_provider": "AWS",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "A sensitive port, such as port 23 or port 110, is open for the whole network in either TCP or UDP protocol",
			"description_id": "5be78364",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "8ee7975786f963224d3fc9e1ba25a7a4de462f14225b8224bdd7cc0ef473886d",
					"line": 10,
					"resource_type": "aws_security_group",
					"resource_name": "terraform-example-instance",
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[instance].ingress",
					"search_line": -1,
					"search_value": "TCP,8080",
					"expected_value": "Known internal web port (TCP:8080) should not be allowed",
					"actual_value": "Known internal web port (TCP:8080) is allowed"
				}
			]
		},
		{
			"query_name": "Unrestricted Security Group Ingress",
			"query_id": "4728cd65-a20c-49da-8b31-9c08b423e4db",
			"query_url": "https://www.terraform.io/docs/providers/aws/r/security_group.html",
			"severity": "HIGH",
			"platform": "Terraform",
			"cwe": "668",
			"cloud_provider": "AWS",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "Security groups allow ingress from 0.0.0.0:0 and/or ::/0",
			"description_id": "ce3ee5e0",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "5444e0ef8d2db8ef3f723c6ae29cd724dbb2eb263acc1e2dbe6294b1affa1096",
					"line": 14,
					"resource_type": "aws_security_group",
					"resource_name": "terraform-example-instance",
					"issue_type": "IncorrectValue",
					"search_key": "aws_security_group[instance].ingress.cidr_blocks",
					"search_line": -1,
					"search_value": "",
					"expected_value": "One of 'ingress.cidr_blocks' not equal '0.0.0.0/0'",
					"actual_value": "One of 'ingress.cidr_blocks' equal '0.0.0.0/0'"
				}
			]
		},
		{
			"query_name": "EC2 Instance Has Public IP",
			"query_id": "5a2486aa-facf-477d-a5c1-b010789459ce",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#associate_public_ip_address",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"cwe": "200",
			"cloud_provider": "AWS",
			"category": "Networking and Firewall",
			"experimental": false,
			"description": "EC2 Instance should not have a public IP address.",
			"description_id": "c6f1d1f4",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "e82369ef5a0411269004c34528965e30525f32351f413aec93aaf1a628a0959a",
					"line": 19,
					"resource_type": "aws_instance",
					"resource_name": "terraform-example",
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.example",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'associate_public_ip_address' should be defined and not null",
					"actual_value": "'associate_public_ip_address' is undefined or null"
				}
			]
		},
		{
			"query_name": "EC2 Instance Monitoring Disabled",
			"query_id": "23b70e32-032e-4fa6-ba5c-82f56b9980e6",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#monitoring",
			"severity": "MEDIUM",
			"platform": "Terraform",
			"cwe": "778",
			"cloud_provider": "AWS",
			"category": "Observability",
			"experimental": false,
			"description": "EC2 Instance should have detailed monitoring enabled. With detailed monitoring enabled data is available in 1-minute periods",
			"description_id": "0d5413e6",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "c45c5d7d8946a6907b941dee3cc1c6dae8d2f5c7ff77c2b6817cf0c203dfb480",
					"line": 19,
					"resource_type": "aws_instance",
					"resource_name": "terraform-example",
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance.{{example}}",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'monitoring' should be defined and not null",
					"actual_value": "'monitoring' is undefined or null",
					"remediation": "monitoring = true",
					"remediation_type": "addition"
				}
			]
		},
		{
			"query_name": "IAM Access Analyzer Not Enabled",
			"query_id": "e592a0c5-5bdb-414c-9066-5dba7cdea370",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/accessanalyzer_analyzer",
			"severity": "LOW",
			"platform": "Terraform",
			"cwe": "710",
			"cloud_provider": "AWS",
			"category": "Best Practices",
			"experimental": false,
			"description": "IAM Access Analyzer should be enabled and configured to continuously monitor resource permissions",
			"description_id": "d03e85ae",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "8ec808ded65ec707364eca8a8c7eaeb33ff60aee5391dee8083a0679d0c38afb",
					"line": 7,
					"resource_type": "n/a",
					"resource_name": "n/a",
					"issue_type": "MissingAttribute",
					"search_key": "resource",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'aws_accessanalyzer_analyzer' should be set",
					"actual_value": "'aws_accessanalyzer_analyzer' is undefined"
				}
			]
		},
		{
			"query_name": "EC2 Not EBS Optimized",
			"query_id": "60224630-175a-472a-9e23-133827040766",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/instance#ebs_optimized",
			"severity": "INFO",
			"platform": "Terraform",
			"cwe": "710",
			"cloud_provider": "AWS",
			"category": "Best Practices",
			"experimental": false,
			"description": "It's considered a best practice for an EC2 instance to use an EBS optimized instance. This provides the best performance for your EBS volumes by minimizing contention between Amazon EBS I/O and other traffic from your instance",
			"description_id": "ddce4bd9",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "eb2870130aa2cd3a4d009852c96caabdb655c4057344e6e9742e092b234c3b35",
					"line": 19,
					"resource_type": "aws_instance",
					"resource_name": "terraform-example",
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[{{example}}]",
					"search_line": 19,
					"search_value": "",
					"expected_value": "'ebs_optimized' should be set to true",
					"actual_value": "'ebs_optimized' is undefined or null",
					"remediation": "ebs_optimized = true",
					"remediation_type": "addition"
				}
			]
		},
		{
			"query_name": "Output Without Description",
			"query_id": "59312e8a-a64e-41e7-a252-618533dd1ea8",
			"query_url": "https://www.terraform.io/docs/language/values/outputs.html#description-output-value-documentation",
			"severity": "INFO",
			"platform": "Terraform",
			"cwe": "710",
			"cloud_provider": "COMMON",
			"category": "Best Practices",
			"experimental": false,
			"description": "All outputs should contain a valid description.",
			"description_id": "81535d16",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "b970f821e1f7a9f1e6a1fb4d4e58f241a87c4194a9912660481d27138d18acca",
					"line": 36,
					"resource_type": "n/a",
					"resource_name": "n/a",
					"issue_type": "MissingAttribute",
					"search_key": "output.{{public_ip}}",
					"search_line": -1,
					"search_value": "",
					"expected_value": "'description' should be defined and not null",
					"actual_value": "'description' is undefined or null"
				}
			]
		},
		{
			"query_name": "Resource Not Using Tags",
			"query_id": "e38a8e0a-b88b-4902-b3fe-b0fcb17d5c10",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/guides/resource-tagging",
			"severity": "INFO",
			"platform": "Terraform",
			"cwe": "665",
			"cloud_provider": "AWS",
			"category": "Best Practices",
			"experimental": false,
			"description": "AWS services resource tags are an essential part of managing components. As a best practice, the field 'tags' should have additional tags defined other than 'Name'",
			"description_id": "09db2d52",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "90f65e90daf780960c3b8d013601fa95af675eb4d2ed1324ce4e5c1479801e50",
					"line": 30,
					"resource_type": "aws_instance",
					"resource_name": "terraform-example",
					"issue_type": "MissingAttribute",
					"search_key": "aws_instance[{{example}}].tags",
					"search_line": -1,
					"search_value": "",
					"expected_value": "aws_instance[{{example}}].tags has additional tags defined other than 'Name'",
					"actual_value": "aws_instance[{{example}}].tags does not have additional tags defined other than 'Name'"
				},
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "213eb478f906ec226a75eef7b5a1b108a205b215223c29816578e835c836fc53",
					"line": 7,
					"resource_type": "aws_security_group",
					"resource_name": "terraform-example-instance",
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{instance}}]",
					"search_line": -1,
					"search_value": "",
					"expected_value": "aws_security_group[{{instance}}].tags should be defined and not null",
					"actual_value": "aws_security_group[{{instance}}].tags is undefined or null"
				}
			]
		},
		{
			"query_name": "Security Group Rule Without Description",
			"query_id": "68eb4bf3-f9bf-463d-b5cf-e029bb446d2e",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description",
			"severity": "INFO",
			"platform": "Terraform",
			"cwe": "710",
			"cloud_provider": "AWS",
			"category": "Best Practices",
			"experimental": false,
			"description": "It's considered a best practice for all rules in AWS Security Group to have a description",
			"description_id": "cee242dd",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "297831b229b0debfa307e732c21b8515bad48acc882d4a6c6fecf7b0cdcb6546",
					"line": 10,
					"resource_type": "aws_security_group",
					"resource_name": "terraform-example-instance",
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{instance}}].ingress",
					"search_line": 10,
					"search_value": "",
					"expected_value": "aws_security_group[{{instance}}].ingress description should be defined and not null",
					"actual_value": "aws_security_group[{{instance}}].ingress description is undefined or null"
				}
			]
		},
		{
			"query_name": "Security Group Without Description",
			"query_id": "cb3f5ed6-0d18-40de-a93d-b3538db31e8c",
			"query_url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group#description",
			"severity": "INFO",
			"platform": "Terraform",
			"cwe": "710",
			"cloud_provider": "AWS",
			"category": "Best Practices",
			"experimental": false,
			"description": "It's considered a best practice for AWS Security Group to have a description",
			"description_id": "bc535d27",
			"files": [
				{
					"file_name": "03-one-webserver.zip/03-one-webserver/main.tf",
					"similarity_id": "ac85ad2695f716589056dc477587290d7dd5fd3db0c01563f9146990913094a5",
					"line": 7,
					"resource_type": "aws_security_group",
					"resource_name": "terraform-example-instance",
					"issue_type": "MissingAttribute",
					"search_key": "aws_security_group[{{instance}}]",
					"search_line": -1,
					"search_value": "",
					"expected_value": "aws_security_group[{{instance}}] description should be defined and not null",
					"actual_value": "aws_security_group[{{instance}}] description is undefined or null"
				}
			]
		}
	]
}
